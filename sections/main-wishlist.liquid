{% stylesheet %}
  /* assets/styles.css */
  .collection-grid {
    display: flex;
    flex-wrap: wrap;
    gap: 20px;
  }

  .product-card {
    background: #fff;
    border: 1px solid #ddd;
    padding: 15px;
    width: calc(33.333% - 20px);
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    transition: transform 0.3s;
  }

  .product-card:hover {
    transform: scale(1.05);
  }

  .product-card img {
    width: 50%;
    height: auto;
  }

  .product-info {
    padding: 10px 0;
  }

  .product-title {
    font-size: 18px;
    margin: 10px 0;
  }

  .product-price {
    color: #e60023;
    font-weight: bold;
  }
{% endstylesheet %}
<div class="collection-grid">
  <span id="product_wished_id"></span>
    <div class="product-card">
        <a href="{{ product.url }}">
            <img id="product-image" src="" alt="Product Image">
        </a>
      <div class="product-info">
        <h2 class="product-title" id="product-title"></h2>
        <p class="product-price" id="product-prices"></p>
      </div>
    </div>
</div>

{% javascript %}
    var wishlist_productData = [];
    wishlist_productData = JSON.parse(localStorage.getItem('wishlist_product'));
    var proId = wishlist_productData.map((item) => item.proId);
    var qty = wishlist_productData.map((item) => item.addedQty);
    const container = document.getElementById('collection-grid');
    const productImage = document.createElement('img');
    const productTitle = document.createElement('h1');
    const productPrice = document.createElement('p');
    const productDescription = document.createElement('div');
    for (let index = 0; index < array.length; index++) {
        fetch(`/products/my-first-product.js`)
            .then((response) => response.json())
            .then((product) => {
                if (product.images.length > 0) {
        productImage.src = product.images[0];
    } else {
        productImage.src = 'default-image-url'; // fallback image if no product image is available
    }
    productTitle.innerText = product.title;
    productPrice.innerText = Shopify.formatMoney(product.price);
    productDescription.innerHTML = product.body_html;

    // Clear previous content
    container.innerHTML = '';

    // Append the elements to the container
    container.appendChild(productImage);
    container.appendChild(productTitle);
    container.appendChild(productPrice);
    container.appendChild(productDescription);
            })
            .catch((error) => {
            console.error('Error fetching product data:', error);
            });
        }
}
{% endjavascript %}
